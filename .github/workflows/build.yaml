name: Build and Scan Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # Trigger on tags that match semantic versioning format (v0.0.1)
  pull_request:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64,amd64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract branch or tag name and set version
        id: extract_tag
        run: |
          # First, determine the Docker tag
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BRANCH_NAME="${{ github.head_ref }}"
            TIMESTAMP=$(date -u +"%Y%m%d-%H%M")
            SHORT_SHA=$(git rev-parse --short HEAD)
            TAG_NAME="${BRANCH_NAME}-${TIMESTAMP}-${SHORT_SHA}"
          elif [[ "${{ github.ref }}" == refs/heads/* ]]; then
            BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
            TAG_NAME="${BRANCH_NAME}-latest"
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG_NAME=$(echo "${{ github.ref }}" | sed 's|refs/tags/||')
          else
            TAG_NAME="latest"
          fi
          echo "TAG=$TAG_NAME" >> $GITHUB_ENV
          echo "Docker Tag: $TAG_NAME"

          # Now, determine the version for the build
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # If this is a tag push, use the tag as the version (without the 'v' prefix for semantic version)
            VERSION=$(echo "${{ github.ref }}" | sed 's|refs/tags/v||')
          else
            # For non-tag builds, use a development version based on date and commit
            TIMESTAMP=$(date -u +"%Y%m%d")
            SHORT_SHA=$(git rev-parse --short HEAD)
            VERSION="0.0.0-dev.${TIMESTAMP}.${SHORT_SHA}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Build Version: $VERSION"

      - name: Build and Export Docker Image for Scanning
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/trivy-ui:${{ env.TAG }}-scan
          build-args: |
            VERSION=${{ env.VERSION }}

      - name: Run Trivy Scan (Before Pushing)
        id: trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/trivy-ui:${{ env.TAG }}-scan'
          format: 'json'
          output: trivy-result.json
          ignore-unfixed: true
          exit-code: 0
          severity: 'CRITICAL,HIGH'

      - name: Check Trivy Scan Result
        id: check_trivy
        run: |
          if grep -q '"Vulnerabilities":' trivy-result.json && grep -q '"Severity":' trivy-result.json; then
            echo "found_vuln=true" >> $GITHUB_OUTPUT
          else
            echo "found_vuln=false" >> $GITHUB_OUTPUT
          fi

      - name: Set Docker tags
        id: docker_meta
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # For tag pushes, set both the specific version tag and latest
            echo "DOCKER_TAGS=${{ secrets.DOCKERHUB_USERNAME }}/trivy-ui:${{ env.TAG }},${{ secrets.DOCKERHUB_USERNAME }}/trivy-ui:latest" >> $GITHUB_ENV
          else
            # For other pushes, just use the specific tag
            echo "DOCKER_TAGS=${{ secrets.DOCKERHUB_USERNAME }}/trivy-ui:${{ env.TAG }}" >> $GITHUB_ENV
          fi

      - name: Build and Push Multi-Architecture Docker Image
        id: docker_build
        if: steps.check_trivy.outputs.found_vuln == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.DOCKER_TAGS }}
          build-args: |
            VERSION=${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ secrets.DOCKERHUB_USERNAME }}/trivy-ui:${{ env.TAG }}

      - name: Summary
        run: |
          echo "### Multi-Architecture Docker Image Build Complete ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "- **Images:**" >> $GITHUB_STEP_SUMMARY
            echo "  - ${{ secrets.DOCKERHUB_USERNAME }}/trivy-ui:${{ env.TAG }}" >> $GITHUB_STEP_SUMMARY
            echo "  - ${{ secrets.DOCKERHUB_USERNAME }}/trivy-ui:latest" >> $GITHUB_STEP_SUMMARY
            echo "- **Version:** ${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Image:** ${{ secrets.DOCKERHUB_USERNAME }}/trivy-ui:${{ env.TAG }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Development Version:** ${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
          fi

          echo "- **Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "- **Digest:** ${{ steps.docker_build.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Run with: \`docker run -v ~/.kube:/root/.kube -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/trivy-ui:${{ env.TAG }}\`" >> $GITHUB_STEP_SUMMARY
